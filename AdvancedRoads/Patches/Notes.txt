How node works
Call stack:
- NetManager.InializeNode() is called by NetManager.CreateNode(). Then it calls NetManager.UpdateNode() to mark it for update.
- NetManager.UpdateNode merely marks node for update in simulation step.
- CalculateNode() is only called in NetManager.SimulationStep()
- NetNode.UpdateNode() is called in NetManager.SimulationStep() and before releasing node.
- NetAI.UpdateNode() called by NetNode.UpdateNode()
- NetManager.UpdateNodeFlags() is called in NetManager.SimulationStep() and after deserialization. // force call to fix node controller?
- NetAI.UpdateNodeFlags() called by NetNode.UpdateNode() and after UI events (stop/TL).
- NetSegment.UpdateLanes() is called in NetManager.SimulationStep(), after deserialization, and after when UI events (stop/TL).
- NetAI.UpdateLanes() called by NetSegment.UpdateLanes()

Call order in NetManager.SimulationStep():
- for each marked Node:
    - NetNode.CalculateNode()
- for each marked segment
    - NetSegment.CaluclateSegment() -> UpdateStart/EndSegments()
- for each marked segment
    - NetSegment.UpdateLanes() -> NetAI.UpdateLanes() *
- for each marked Node:
    - NetNode.UpdateNode() -> NetAI.UpdateNode()
    - NetManager.UpdateNodeFlags() -> NetAI.UpdateNodeFlags() *
- for each marked Segment:
    - NetSegment.UpdateSegment() -> NetAI.UpdateSegment()
    - NetManager.UpdateSegmentFlags() -> NetAI.UpdateSegmentFlags() *



